#------------------------------------------------------------------------------
#
# 本番用
#
# Usage
#
# $ expose COMPOSE_FILE=./docker-compose.yml
# $ docker-compose build
# $ docker-compose up -d
#
#------------------------------------------------------------------------------
version: "3.2"
services:

  #
  # Frontend Webserver container
  #
  question-front:
    image: hidyon/question-front
    build:
      context: frontend/app
      dockerfile: Dockerfile
    container_name: question-front
    ports:
      - 80:80
    networks:
      - question-webnet
    depends_on:
      - question-mongo
      - question-back
    links:
      - question-back
    restart: always

  #
  # Backend Server container
  #
  question-back:
    image: hidyon/question-back
    build:
      context: backend/app
      dockerfile: Dockerfile
    container_name: question-back
    ports:
      - 3000:3000
    networks:
      - question-webnet
    depends_on:
      - question-mongo
    links:
      - question-mongo
    restart: always

  #
  # MongoDB container
  #
  # ルート権限をもつユーザー・パスワードを登録 
  # ($MONGO_INITDB_ROOT_USERNAME, $MONGO_INITDB_ROOT_PASSWORD)
  # DBを作成　(DB名は${MONGO_INITDB_DATABASE)
  #
  # docker-compose up -d　の実行時に
  # ./mongo/docker-entrypoint-initdb.d/init.js を実行
  # データベースの一般ユーザー登録、初期データ搭載 
  #
  question-mongo:
    image: mongo:4.2.6-bionic
    container_name: question-mongo
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
    networks:
      - question-webnet
    restart: always

  #
  # MongoDB GUI Client container
  #
  question-mongo-express:
    image: mongo-express:0.54.0
    container_name: question-mongo-express
    ports:
      - 8081:8081
    networks:
      - question-webnet
    env_file: .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: question-mongo
      ME_CONFIG_BASICAUTH_UERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - question-mongo
    links:
      - question-mongo
    restart: always
  
networks:
  question-webnet:

